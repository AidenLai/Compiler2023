Terminals unused in grammar

   CHAR
   DEFAULT
   DO


State 34 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations statements

    2 statements: statements statement
    3           | %empty

    4 statement: block
    5          | simple
    6          | condition
    7          | loop

    8 declarations: declarations declaration_function
    9             | %empty

   10 declaration_function: declaration
   11                     | function
   12                     | procedure

   13 declaration: constants
   14            | variable
   15            | array

   16 constants: CONST IDENTIFIER type ASSIGN constant_exp
   17          | CONST IDENTIFIER ASSIGN constant_exp

   18 type: ':' INT
   19     | ':' REAL
   20     | ':' BOOL
   21     | ':' STRING

   22 constant_exp: INT_NUM
   23             | REAL_NUM
   24             | STRING_CONSTANTS
   25             | TRUE
   26             | FALSE

   27 variable: VAR IDENTIFIER type ASSIGN constant_exp
   28         | VAR IDENTIFIER type
   29         | VAR IDENTIFIER ASSIGN constant_exp

   30 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number OF type

   31 number: INT_NUM
   32       | IDENTIFIER

   33 $@1: %empty

   34 function: FUNCTION IDENTIFIER $@1 parameters_block type function_bodys END IDENTIFIER

   35 $@2: %empty

   36 procedure: PROCEDURE IDENTIFIER $@2 parameters_block function_bodys END IDENTIFIER

   37 function_bodys: function_bodys function_body
   38               | %empty

   39 function_body: declaration
   40              | statement

   41 parameters_block: '(' parameters ')'
   42                 | %empty

   43 parameters: parameters ',' parameter
   44           | parameter

   45 parameter: IDENTIFIER type

   46 $@3: %empty

   47 block: BEGIN_ $@3 function_bodys END

   48 simple: IDENTIFIER ASSIGN expression
   49       | PUT expression
   50       | GET IDENTIFIER
   51       | RESULT expression
   52       | RETURN
   53       | EXIT when
   54       | SKIP
   55       | expression

   56 when: WHEN expression
   57     | %empty

   58 expression: expression '+' expression
   59           | expression '-' expression
   60           | expression '*' expression
   61           | expression '/' expression
   62           | expression MOD expression
   63           | '-' expression
   64           | expression AND expression
   65           | expression OR expression
   66           | expression NOT expression
   67           | expression '<' expression
   68           | expression LE expression
   69           | expression '=' expression
   70           | expression GE expression
   71           | expression '>' expression
   72           | expression NOT_EQU expression
   73           | '(' expression ')'
   74           | IDENTIFIER
   75           | constant_exp
   76           | function_procedure
   77           | array_reference

   78 function_procedure: IDENTIFIER '(' arguments ')'

   79 array_reference: IDENTIFIER '[' expression ']'

   80 arguments: arguments ',' expression
   81          | expression

   82 condition: IF expression THEN function_bodys ELSE function_bodys END IF
   83          | IF expression THEN function_bodys END IF

   84 loop: LOOP function_bodys END LOOP
   85     | FOR decreasing IDENTIFIER ':' number '.' '.' number function_bodys END FOR

   86 decreasing: DECREASING
   87           | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 41 73 78
')' (41) 41 73 78
'*' (42) 60
'+' (43) 58
',' (44) 43 80
'-' (45) 59 63
'.' (46) 30 85
'/' (47) 61
':' (58) 18 19 20 21 30 85
'<' (60) 67
'=' (61) 69
'>' (62) 71
'[' (91) 79
']' (93) 79
error (256)
ARRAY (258) 30
BEGIN_ (259) 47
BOOL (260) 20
CHAR (261)
CONST (262) 16 17
DECREASING (263) 86
DEFAULT (264)
DO (265)
ELSE (266) 82
END (267) 34 36 47 82 83 84 85
EXIT (268) 53
FALSE (269) 26
FOR (270) 85
FUNCTION (271) 34
GET (272) 50
IF (273) 82 83
INT (274) 18
LOOP (275) 84
OF (276) 30
PUT (277) 49
PROCEDURE (278) 36
REAL (279) 19
RESULT (280) 51
RETURN (281) 52
SKIP (282) 54
STRING (283) 21
THEN (284) 82 83
TRUE (285) 25
VAR (286) 27 28 29
WHEN (287) 56
ASSIGN (288) 16 17 27 29 48
AND (289) 64
OR (290) 65
NOT (291) 66
NOT_EQU (292) 72
LE (293) 68
GE (294) 70
MOD (295) 62
IDENTIFIER (296) 16 17 27 28 29 30 32 34 36 45 48 50 74 78 79 85
INT_NUM (297) 22 31
REAL_NUM (298) 23
STRING_CONSTANTS (299) 24
UMINUS (300)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
statements (62)
    on left: 2 3, on right: 1 2
statement (63)
    on left: 4 5 6 7, on right: 2 40
declarations (64)
    on left: 8 9, on right: 1 8
declaration_function (65)
    on left: 10 11 12, on right: 8
declaration (66)
    on left: 13 14 15, on right: 10 39
constants (67)
    on left: 16 17, on right: 13
type (68)
    on left: 18 19 20 21, on right: 16 27 28 30 34 45
constant_exp (69)
    on left: 22 23 24 25 26, on right: 16 17 27 29 75
variable (70)
    on left: 27 28 29, on right: 14
array (71)
    on left: 30, on right: 15
number (72)
    on left: 31 32, on right: 30 85
function (73)
    on left: 34, on right: 11
$@1 (74)
    on left: 33, on right: 34
procedure (75)
    on left: 36, on right: 12
$@2 (76)
    on left: 35, on right: 36
function_bodys (77)
    on left: 37 38, on right: 34 36 37 47 82 83 84 85
function_body (78)
    on left: 39 40, on right: 37
parameters_block (79)
    on left: 41 42, on right: 34 36
parameters (80)
    on left: 43 44, on right: 41 43
parameter (81)
    on left: 45, on right: 43 44
block (82)
    on left: 47, on right: 4
$@3 (83)
    on left: 46, on right: 47
simple (84)
    on left: 48 49 50 51 52 53 54 55, on right: 5
when (85)
    on left: 56 57, on right: 53
expression (86)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77, on right: 48 49 51 55 56 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 79 80 81 82 83
function_procedure (87)
    on left: 78, on right: 76
array_reference (88)
    on left: 79, on right: 77
arguments (89)
    on left: 80 81, on right: 78 80
condition (90)
    on left: 82 83, on right: 6
loop (91)
    on left: 84 85, on right: 7
decreasing (92)
    on left: 86 87, on right: 85


State 0

    0 $accept: . program $end

    $default  reduce using rule 9 (declarations)

    program       go to state 1
    declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declarations . statements
    8 declarations: declarations . declaration_function

    ARRAY      shift, and go to state 4
    CONST      shift, and go to state 5
    FUNCTION   shift, and go to state 6
    PROCEDURE  shift, and go to state 7
    VAR        shift, and go to state 8

    $default  reduce using rule 3 (statements)

    statements            go to state 9
    declaration_function  go to state 10
    declaration           go to state 11
    constants             go to state 12
    variable              go to state 13
    array                 go to state 14
    function              go to state 15
    procedure             go to state 16


State 3

    0 $accept: program $end .

    $default  accept


State 4

   30 array: ARRAY . IDENTIFIER ':' ARRAY number '.' '.' number OF type

    IDENTIFIER  shift, and go to state 17


State 5

   16 constants: CONST . IDENTIFIER type ASSIGN constant_exp
   17          | CONST . IDENTIFIER ASSIGN constant_exp

    IDENTIFIER  shift, and go to state 18


State 6

   34 function: FUNCTION . IDENTIFIER $@1 parameters_block type function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 19


State 7

   36 procedure: PROCEDURE . IDENTIFIER $@2 parameters_block function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 8

   27 variable: VAR . IDENTIFIER type ASSIGN constant_exp
   28         | VAR . IDENTIFIER type
   29         | VAR . IDENTIFIER ASSIGN constant_exp

    IDENTIFIER  shift, and go to state 21


State 9

    1 program: declarations statements .
    2 statements: statements . statement

    BEGIN_            shift, and go to state 22
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    $default  reduce using rule 1 (program)

    statement           go to state 40
    constant_exp        go to state 41
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 10

    8 declarations: declarations declaration_function .

    $default  reduce using rule 8 (declarations)


State 11

   10 declaration_function: declaration .

    $default  reduce using rule 10 (declaration_function)


State 12

   13 declaration: constants .

    $default  reduce using rule 13 (declaration)


State 13

   14 declaration: variable .

    $default  reduce using rule 14 (declaration)


State 14

   15 declaration: array .

    $default  reduce using rule 15 (declaration)


State 15

   11 declaration_function: function .

    $default  reduce using rule 11 (declaration_function)


State 16

   12 declaration_function: procedure .

    $default  reduce using rule 12 (declaration_function)


State 17

   30 array: ARRAY IDENTIFIER . ':' ARRAY number '.' '.' number OF type

    ':'  shift, and go to state 49


State 18

   16 constants: CONST IDENTIFIER . type ASSIGN constant_exp
   17          | CONST IDENTIFIER . ASSIGN constant_exp

    ASSIGN  shift, and go to state 50
    ':'     shift, and go to state 51

    type  go to state 52


State 19

   34 function: FUNCTION IDENTIFIER . $@1 parameters_block type function_bodys END IDENTIFIER

    $default  reduce using rule 33 ($@1)

    $@1  go to state 53


State 20

   36 procedure: PROCEDURE IDENTIFIER . $@2 parameters_block function_bodys END IDENTIFIER

    $default  reduce using rule 35 ($@2)

    $@2  go to state 54


State 21

   27 variable: VAR IDENTIFIER . type ASSIGN constant_exp
   28         | VAR IDENTIFIER . type
   29         | VAR IDENTIFIER . ASSIGN constant_exp

    ASSIGN  shift, and go to state 55
    ':'     shift, and go to state 51

    type  go to state 56


State 22

   47 block: BEGIN_ . $@3 function_bodys END

    $default  reduce using rule 46 ($@3)

    $@3  go to state 57


State 23

   53 simple: EXIT . when

    WHEN  shift, and go to state 58

    $default  reduce using rule 57 (when)

    when  go to state 59


State 24

   26 constant_exp: FALSE .

    $default  reduce using rule 26 (constant_exp)


State 25

   85 loop: FOR . decreasing IDENTIFIER ':' number '.' '.' number function_bodys END FOR

    DECREASING  shift, and go to state 60

    $default  reduce using rule 87 (decreasing)

    decreasing  go to state 61


State 26

   50 simple: GET . IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 27

   82 condition: IF . expression THEN function_bodys ELSE function_bodys END IF
   83          | IF . expression THEN function_bodys END IF

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 64
    function_procedure  go to state 45
    array_reference     go to state 46


State 28

   84 loop: LOOP . function_bodys END LOOP

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 65


State 29

   49 simple: PUT . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 66
    function_procedure  go to state 45
    array_reference     go to state 46


State 30

   51 simple: RESULT . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 67
    function_procedure  go to state 45
    array_reference     go to state 46


State 31

   52 simple: RETURN .

    $default  reduce using rule 52 (simple)


State 32

   54 simple: SKIP .

    $default  reduce using rule 54 (simple)


State 33

   25 constant_exp: TRUE .

    $default  reduce using rule 25 (constant_exp)


State 34

   48 simple: IDENTIFIER . ASSIGN expression
   74 expression: IDENTIFIER .
   78 function_procedure: IDENTIFIER . '(' arguments ')'
   79 array_reference: IDENTIFIER . '[' expression ']'

    ASSIGN  shift, and go to state 68
    '('     shift, and go to state 69
    '['     shift, and go to state 70

    '('       [reduce using rule 74 (expression)]
    $default  reduce using rule 74 (expression)


State 35

   22 constant_exp: INT_NUM .

    $default  reduce using rule 22 (constant_exp)


State 36

   23 constant_exp: REAL_NUM .

    $default  reduce using rule 23 (constant_exp)


State 37

   24 constant_exp: STRING_CONSTANTS .

    $default  reduce using rule 24 (constant_exp)


State 38

   63 expression: '-' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 71
    function_procedure  go to state 45
    array_reference     go to state 46


State 39

   73 expression: '(' . expression ')'

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 72
    function_procedure  go to state 45
    array_reference     go to state 46


State 40

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


State 41

   75 expression: constant_exp .

    $default  reduce using rule 75 (expression)


State 42

    4 statement: block .

    $default  reduce using rule 4 (statement)


State 43

    5 statement: simple .

    $default  reduce using rule 5 (statement)


State 44

   55 simple: expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 55 (simple)]
    $default  reduce using rule 55 (simple)


State 45

   76 expression: function_procedure .

    $default  reduce using rule 76 (expression)


State 46

   77 expression: array_reference .

    $default  reduce using rule 77 (expression)


State 47

    6 statement: condition .

    $default  reduce using rule 6 (statement)


State 48

    7 statement: loop .

    $default  reduce using rule 7 (statement)


State 49

   30 array: ARRAY IDENTIFIER ':' . ARRAY number '.' '.' number OF type

    ARRAY  shift, and go to state 87


State 50

   17 constants: CONST IDENTIFIER ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37

    constant_exp  go to state 88


State 51

   18 type: ':' . INT
   19     | ':' . REAL
   20     | ':' . BOOL
   21     | ':' . STRING

    BOOL    shift, and go to state 89
    INT     shift, and go to state 90
    REAL    shift, and go to state 91
    STRING  shift, and go to state 92


State 52

   16 constants: CONST IDENTIFIER type . ASSIGN constant_exp

    ASSIGN  shift, and go to state 93


State 53

   34 function: FUNCTION IDENTIFIER $@1 . parameters_block type function_bodys END IDENTIFIER

    '('  shift, and go to state 94

    $default  reduce using rule 42 (parameters_block)

    parameters_block  go to state 95


State 54

   36 procedure: PROCEDURE IDENTIFIER $@2 . parameters_block function_bodys END IDENTIFIER

    '('  shift, and go to state 94

    '('       [reduce using rule 42 (parameters_block)]
    $default  reduce using rule 42 (parameters_block)

    parameters_block  go to state 96


State 55

   29 variable: VAR IDENTIFIER ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37

    constant_exp  go to state 97


State 56

   27 variable: VAR IDENTIFIER type . ASSIGN constant_exp
   28         | VAR IDENTIFIER type .

    ASSIGN  shift, and go to state 98

    $default  reduce using rule 28 (variable)


State 57

   47 block: BEGIN_ $@3 . function_bodys END

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 99


State 58

   56 when: WHEN . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 100
    function_procedure  go to state 45
    array_reference     go to state 46


State 59

   53 simple: EXIT when .

    $default  reduce using rule 53 (simple)


State 60

   86 decreasing: DECREASING .

    $default  reduce using rule 86 (decreasing)


State 61

   85 loop: FOR decreasing . IDENTIFIER ':' number '.' '.' number function_bodys END FOR

    IDENTIFIER  shift, and go to state 101


State 62

   50 simple: GET IDENTIFIER .

    $default  reduce using rule 50 (simple)


State 63

   74 expression: IDENTIFIER .
   78 function_procedure: IDENTIFIER . '(' arguments ')'
   79 array_reference: IDENTIFIER . '[' expression ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    '('       [reduce using rule 74 (expression)]
    $default  reduce using rule 74 (expression)


State 64

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression
   82 condition: IF expression . THEN function_bodys ELSE function_bodys END IF
   83          | IF expression . THEN function_bodys END IF

    THEN     shift, and go to state 102
    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86


State 65

   37 function_bodys: function_bodys . function_body
   84 loop: LOOP function_bodys . END LOOP

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 103
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 66

   49 simple: PUT expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 49 (simple)]
    $default  reduce using rule 49 (simple)


State 67

   51 simple: RESULT expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 51 (simple)]
    $default  reduce using rule 51 (simple)


State 68

   48 simple: IDENTIFIER ASSIGN . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 107
    function_procedure  go to state 45
    array_reference     go to state 46


State 69

   78 function_procedure: IDENTIFIER '(' . arguments ')'

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 108
    function_procedure  go to state 45
    array_reference     go to state 46
    arguments           go to state 109


State 70

   79 array_reference: IDENTIFIER '[' . expression ']'

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 110
    function_procedure  go to state 45
    array_reference     go to state 46


State 71

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   63           | '-' expression .
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    $default  reduce using rule 63 (expression)


State 72

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression
   73           | '(' expression . ')'

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    ')'      shift, and go to state 111


State 73

   64 expression: expression AND . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 112
    function_procedure  go to state 45
    array_reference     go to state 46


State 74

   65 expression: expression OR . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 113
    function_procedure  go to state 45
    array_reference     go to state 46


State 75

   66 expression: expression NOT . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 114
    function_procedure  go to state 45
    array_reference     go to state 46


State 76

   72 expression: expression NOT_EQU . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 115
    function_procedure  go to state 45
    array_reference     go to state 46


State 77

   68 expression: expression LE . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 116
    function_procedure  go to state 45
    array_reference     go to state 46


State 78

   70 expression: expression GE . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 117
    function_procedure  go to state 45
    array_reference     go to state 46


State 79

   62 expression: expression MOD . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 118
    function_procedure  go to state 45
    array_reference     go to state 46


State 80

   67 expression: expression '<' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 119
    function_procedure  go to state 45
    array_reference     go to state 46


State 81

   69 expression: expression '=' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 120
    function_procedure  go to state 45
    array_reference     go to state 46


State 82

   71 expression: expression '>' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 121
    function_procedure  go to state 45
    array_reference     go to state 46


State 83

   58 expression: expression '+' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 122
    function_procedure  go to state 45
    array_reference     go to state 46


State 84

   59 expression: expression '-' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 123
    function_procedure  go to state 45
    array_reference     go to state 46


State 85

   60 expression: expression '*' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 124
    function_procedure  go to state 45
    array_reference     go to state 46


State 86

   61 expression: expression '/' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 125
    function_procedure  go to state 45
    array_reference     go to state 46


State 87

   30 array: ARRAY IDENTIFIER ':' ARRAY . number '.' '.' number OF type

    IDENTIFIER  shift, and go to state 126
    INT_NUM     shift, and go to state 127

    number  go to state 128


State 88

   17 constants: CONST IDENTIFIER ASSIGN constant_exp .

    $default  reduce using rule 17 (constants)


State 89

   20 type: ':' BOOL .

    $default  reduce using rule 20 (type)


State 90

   18 type: ':' INT .

    $default  reduce using rule 18 (type)


State 91

   19 type: ':' REAL .

    $default  reduce using rule 19 (type)


State 92

   21 type: ':' STRING .

    $default  reduce using rule 21 (type)


State 93

   16 constants: CONST IDENTIFIER type ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37

    constant_exp  go to state 129


State 94

   41 parameters_block: '(' . parameters ')'

    IDENTIFIER  shift, and go to state 130

    parameters  go to state 131
    parameter   go to state 132


State 95

   34 function: FUNCTION IDENTIFIER $@1 parameters_block . type function_bodys END IDENTIFIER

    ':'  shift, and go to state 51

    type  go to state 133


State 96

   36 procedure: PROCEDURE IDENTIFIER $@2 parameters_block . function_bodys END IDENTIFIER

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 134


State 97

   29 variable: VAR IDENTIFIER ASSIGN constant_exp .

    $default  reduce using rule 29 (variable)


State 98

   27 variable: VAR IDENTIFIER type ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37

    constant_exp  go to state 135


State 99

   37 function_bodys: function_bodys . function_body
   47 block: BEGIN_ $@3 function_bodys . END

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 136
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 100

   56 when: WHEN expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 56 (when)]
    $default  reduce using rule 56 (when)


State 101

   85 loop: FOR decreasing IDENTIFIER . ':' number '.' '.' number function_bodys END FOR

    ':'  shift, and go to state 137


State 102

   82 condition: IF expression THEN . function_bodys ELSE function_bodys END IF
   83          | IF expression THEN . function_bodys END IF

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 138


State 103

   84 loop: LOOP function_bodys END . LOOP

    LOOP  shift, and go to state 139


State 104

   40 function_body: statement .

    $default  reduce using rule 40 (function_body)


State 105

   39 function_body: declaration .

    $default  reduce using rule 39 (function_body)


State 106

   37 function_bodys: function_bodys function_body .

    $default  reduce using rule 37 (function_bodys)


State 107

   48 simple: IDENTIFIER ASSIGN expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 48 (simple)]
    $default  reduce using rule 48 (simple)


State 108

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression
   81 arguments: expression .

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 81 (arguments)


State 109

   78 function_procedure: IDENTIFIER '(' arguments . ')'
   80 arguments: arguments . ',' expression

    ')'  shift, and go to state 140
    ','  shift, and go to state 141


State 110

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression
   79 array_reference: IDENTIFIER '[' expression . ']'

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    ']'      shift, and go to state 142


State 111

   73 expression: '(' expression ')' .

    $default  reduce using rule 73 (expression)


State 112

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   64           | expression AND expression .
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 64 (expression)


State 113

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   65           | expression OR expression .
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 65 (expression)


State 114

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   66           | expression NOT expression .
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 66 (expression)


State 115

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression
   72           | expression NOT_EQU expression .

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 72 (expression)


State 116

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   68           | expression LE expression .
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 68 (expression)


State 117

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   70           | expression GE expression .
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 70 (expression)


State 118

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   62           | expression MOD expression .
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    $default  reduce using rule 62 (expression)


State 119

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   67           | expression '<' expression .
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 67 (expression)


State 120

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   69           | expression '=' expression .
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 69 (expression)


State 121

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   71           | expression '>' expression .
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 71 (expression)


State 122

   58 expression: expression . '+' expression
   58           | expression '+' expression .
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 58 (expression)


State 123

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   59           | expression '-' expression .
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 59 (expression)


State 124

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   60           | expression '*' expression .
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    $default  reduce using rule 60 (expression)


State 125

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   61           | expression '/' expression .
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression

    $default  reduce using rule 61 (expression)


State 126

   32 number: IDENTIFIER .

    $default  reduce using rule 32 (number)


State 127

   31 number: INT_NUM .

    $default  reduce using rule 31 (number)


State 128

   30 array: ARRAY IDENTIFIER ':' ARRAY number . '.' '.' number OF type

    '.'  shift, and go to state 143


State 129

   16 constants: CONST IDENTIFIER type ASSIGN constant_exp .

    $default  reduce using rule 16 (constants)


State 130

   45 parameter: IDENTIFIER . type

    ':'  shift, and go to state 51

    type  go to state 144


State 131

   41 parameters_block: '(' parameters . ')'
   43 parameters: parameters . ',' parameter

    ')'  shift, and go to state 145
    ','  shift, and go to state 146


State 132

   44 parameters: parameter .

    $default  reduce using rule 44 (parameters)


State 133

   34 function: FUNCTION IDENTIFIER $@1 parameters_block type . function_bodys END IDENTIFIER

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 147


State 134

   36 procedure: PROCEDURE IDENTIFIER $@2 parameters_block function_bodys . END IDENTIFIER
   37 function_bodys: function_bodys . function_body

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 148
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 135

   27 variable: VAR IDENTIFIER type ASSIGN constant_exp .

    $default  reduce using rule 27 (variable)


State 136

   47 block: BEGIN_ $@3 function_bodys END .

    $default  reduce using rule 47 (block)


State 137

   85 loop: FOR decreasing IDENTIFIER ':' . number '.' '.' number function_bodys END FOR

    IDENTIFIER  shift, and go to state 126
    INT_NUM     shift, and go to state 127

    number  go to state 149


State 138

   37 function_bodys: function_bodys . function_body
   82 condition: IF expression THEN function_bodys . ELSE function_bodys END IF
   83          | IF expression THEN function_bodys . END IF

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    ELSE              shift, and go to state 150
    END               shift, and go to state 151
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 139

   84 loop: LOOP function_bodys END LOOP .

    $default  reduce using rule 84 (loop)


State 140

   78 function_procedure: IDENTIFIER '(' arguments ')' .

    $default  reduce using rule 78 (function_procedure)


State 141

   80 arguments: arguments ',' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    constant_exp        go to state 41
    expression          go to state 152
    function_procedure  go to state 45
    array_reference     go to state 46


State 142

   79 array_reference: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 79 (array_reference)


State 143

   30 array: ARRAY IDENTIFIER ':' ARRAY number '.' . '.' number OF type

    '.'  shift, and go to state 153


State 144

   45 parameter: IDENTIFIER type .

    $default  reduce using rule 45 (parameter)


State 145

   41 parameters_block: '(' parameters ')' .

    $default  reduce using rule 41 (parameters_block)


State 146

   43 parameters: parameters ',' . parameter

    IDENTIFIER  shift, and go to state 130

    parameter  go to state 154


State 147

   34 function: FUNCTION IDENTIFIER $@1 parameters_block type function_bodys . END IDENTIFIER
   37 function_bodys: function_bodys . function_body

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 155
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 148

   36 procedure: PROCEDURE IDENTIFIER $@2 parameters_block function_bodys END . IDENTIFIER

    IDENTIFIER  shift, and go to state 156


State 149

   85 loop: FOR decreasing IDENTIFIER ':' number . '.' '.' number function_bodys END FOR

    '.'  shift, and go to state 157


State 150

   82 condition: IF expression THEN function_bodys ELSE . function_bodys END IF

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 158


State 151

   83 condition: IF expression THEN function_bodys END . IF

    IF  shift, and go to state 159


State 152

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . MOD expression
   64           | expression . AND expression
   65           | expression . OR expression
   66           | expression . NOT expression
   67           | expression . '<' expression
   68           | expression . LE expression
   69           | expression . '=' expression
   70           | expression . GE expression
   71           | expression . '>' expression
   72           | expression . NOT_EQU expression
   80 arguments: arguments ',' expression .

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 80 (arguments)


State 153

   30 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' . number OF type

    IDENTIFIER  shift, and go to state 126
    INT_NUM     shift, and go to state 127

    number  go to state 160


State 154

   43 parameters: parameters ',' parameter .

    $default  reduce using rule 43 (parameters)


State 155

   34 function: FUNCTION IDENTIFIER $@1 parameters_block type function_bodys END . IDENTIFIER

    IDENTIFIER  shift, and go to state 161


State 156

   36 procedure: PROCEDURE IDENTIFIER $@2 parameters_block function_bodys END IDENTIFIER .

    $default  reduce using rule 36 (procedure)


State 157

   85 loop: FOR decreasing IDENTIFIER ':' number '.' . '.' number function_bodys END FOR

    '.'  shift, and go to state 162


State 158

   37 function_bodys: function_bodys . function_body
   82 condition: IF expression THEN function_bodys ELSE function_bodys . END IF

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 163
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 159

   83 condition: IF expression THEN function_bodys END IF .

    $default  reduce using rule 83 (condition)


State 160

   30 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number . OF type

    OF  shift, and go to state 164


State 161

   34 function: FUNCTION IDENTIFIER $@1 parameters_block type function_bodys END IDENTIFIER .

    $default  reduce using rule 34 (function)


State 162

   85 loop: FOR decreasing IDENTIFIER ':' number '.' '.' . number function_bodys END FOR

    IDENTIFIER  shift, and go to state 126
    INT_NUM     shift, and go to state 127

    number  go to state 165


State 163

   82 condition: IF expression THEN function_bodys ELSE function_bodys END . IF

    IF  shift, and go to state 166


State 164

   30 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number OF . type

    ':'  shift, and go to state 51

    type  go to state 167


State 165

   85 loop: FOR decreasing IDENTIFIER ':' number '.' '.' number . function_bodys END FOR

    $default  reduce using rule 38 (function_bodys)

    function_bodys  go to state 168


State 166

   82 condition: IF expression THEN function_bodys ELSE function_bodys END IF .

    $default  reduce using rule 82 (condition)


State 167

   30 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number OF type .

    $default  reduce using rule 30 (array)


State 168

   37 function_bodys: function_bodys . function_body
   85 loop: FOR decreasing IDENTIFIER ':' number '.' '.' number function_bodys . END FOR

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 169
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    INT_NUM           shift, and go to state 35
    REAL_NUM          shift, and go to state 36
    STRING_CONSTANTS  shift, and go to state 37
    '-'               shift, and go to state 38
    '('               shift, and go to state 39

    statement           go to state 104
    declaration         go to state 105
    constants           go to state 12
    constant_exp        go to state 41
    variable            go to state 13
    array               go to state 14
    function_body       go to state 106
    block               go to state 42
    simple              go to state 43
    expression          go to state 44
    function_procedure  go to state 45
    array_reference     go to state 46
    condition           go to state 47
    loop                go to state 48


State 169

   85 loop: FOR decreasing IDENTIFIER ':' number '.' '.' number function_bodys END . FOR

    FOR  shift, and go to state 170


State 170

   85 loop: FOR decreasing IDENTIFIER ':' number '.' '.' number function_bodys END FOR .

    $default  reduce using rule 85 (loop)
