Terminals unused in grammar

   CHAR
   DEFAULT
   DO


State 55 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 program: $@1 declarations $@2 statements

    4 statements: statements statement
    5           | %empty

    6 statement: block
    7          | simple
    8          | condition
    9          | loop

   10 declarations: declarations declaration_function
   11             | %empty

   12 declaration_function: declaration
   13                     | function
   14                     | procedure

   15 declaration: constants
   16            | variable
   17            | array

   18 constants: CONST IDENTIFIER type ASSIGN constant_exp
   19          | CONST IDENTIFIER ASSIGN constant_exp

   20 type: ':' INT
   21     | ':' REAL
   22     | ':' BOOL
   23     | ':' STRING

   24 constant_exp: INT_NUM
   25             | REAL_NUM
   26             | STRING_CONSTANTS
   27             | TRUE
   28             | FALSE

   29 variable: VAR IDENTIFIER type ASSIGN constant_exp
   30         | VAR IDENTIFIER type
   31         | VAR IDENTIFIER ASSIGN constant_exp

   32 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number OF type

   33 number: INT_NUM
   34       | IDENTIFIER

   35 $@3: %empty

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block ')' type function_bodys END IDENTIFIER

   37 $@4: %empty

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' parameters_block ')' function_bodys END IDENTIFIER

   39 function_bodys: function_bodys function_body
   40               | %empty

   41 function_body: declaration
   42              | statement

   43 parameters_block: parameters
   44                 | %empty

   45 parameters: parameters ',' parameter
   46           | parameter

   47 parameter: IDENTIFIER type

   48 $@5: %empty

   49 block: BEGIN_ $@5 function_bodys END

   50 simple: IDENTIFIER ASSIGN expression

   51 $@6: %empty

   52 simple: PUT $@6 expression
   53       | GET IDENTIFIER
   54       | RESULT expression
   55       | RETURN
   56       | EXIT when
   57       | SKIP
   58       | expression

   59 when: WHEN expression
   60     | %empty

   61 expression: expression '+' expression
   62           | expression '-' expression
   63           | expression '*' expression
   64           | expression '/' expression
   65           | expression MOD expression
   66           | '-' expression
   67           | expression AND expression
   68           | expression OR expression
   69           | NOT expression
   70           | expression '<' expression
   71           | expression LE expression
   72           | expression '=' expression
   73           | expression GE expression
   74           | expression '>' expression
   75           | expression NOT_EQU expression
   76           | '(' expression ')'
   77           | IDENTIFIER
   78           | constant_exp
   79           | function_procedure
   80           | array_reference

   81 function_procedure: IDENTIFIER '(' argument_body ')'

   82 array_reference: IDENTIFIER '[' expression ']'

   83 argument_body: arguments
   84              | %empty

   85 arguments: arguments ',' func_expression
   86          | func_expression

   87 func_expression: expression

   88 if_head: IF expression

   89 condition: if_head THEN function_bodys ELSE function_bodys END IF
   90          | if_head THEN function_bodys END IF

   91 $@7: %empty

   92 loop: LOOP $@7 function_bodys END LOOP

   93 $@8: %empty

   94 $@9: %empty

   95 $@10: %empty

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys END FOR

   97 decreasing: DECREASING
   98           | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 36 38 76 81
')' (41) 36 38 76 81
'*' (42) 63
'+' (43) 61
',' (44) 45 85
'-' (45) 62 66
'.' (46) 32 96
'/' (47) 64
':' (58) 20 21 22 23 32 96
'<' (60) 70
'=' (61) 72
'>' (62) 74
'[' (91) 82
']' (93) 82
error (256)
ARRAY (258) 32
BEGIN_ (259) 49
BOOL (260) 22
CHAR (261)
CONST (262) 18 19
DECREASING (263) 97
DEFAULT (264)
DO (265)
ELSE (266) 89
END (267) 36 38 49 89 90 92 96
EXIT (268) 56
FALSE (269) 28
FOR (270) 96
FUNCTION (271) 36
GET (272) 53
IF (273) 88 89 90
INT (274) 20
LOOP (275) 92
OF (276) 32
PUT (277) 52
PROCEDURE (278) 38
REAL (279) 21
RESULT (280) 54
RETURN (281) 55
SKIP (282) 57
STRING (283) 23
THEN (284) 89 90
TRUE (285) 27
VAR (286) 29 30 31
WHEN (287) 59
ASSIGN (288) 18 19 29 31 50
AND (289) 67
OR (290) 68
NOT (291) 69
NOT_EQU (292) 75
LE (293) 71
GE (294) 73
MOD (295) 65
IDENTIFIER (296) 18 19 29 30 31 32 34 36 38 47 50 53 77 81 82 96
INT_NUM (297) 24 33
REAL_NUM (298) 25
STRING_CONSTANTS (299) 26
UMINUS (300)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 3, on right: 0
$@1 (62)
    on left: 1, on right: 3
$@2 (63)
    on left: 2, on right: 3
statements (64)
    on left: 4 5, on right: 3 4
statement (65)
    on left: 6 7 8 9, on right: 4 42
declarations (66)
    on left: 10 11, on right: 3 10
declaration_function (67)
    on left: 12 13 14, on right: 10
declaration (68)
    on left: 15 16 17, on right: 12 41
constants (69)
    on left: 18 19, on right: 15
type (70)
    on left: 20 21 22 23, on right: 18 29 30 32 36 47
constant_exp (71)
    on left: 24 25 26 27 28, on right: 18 19 29 31 78
variable (72)
    on left: 29 30 31, on right: 16
array (73)
    on left: 32, on right: 17
number (74)
    on left: 33 34, on right: 32 96
function (75)
    on left: 36, on right: 13
$@3 (76)
    on left: 35, on right: 36
procedure (77)
    on left: 38, on right: 14
$@4 (78)
    on left: 37, on right: 38
function_bodys (79)
    on left: 39 40, on right: 36 38 39 49 89 90 92 96
function_body (80)
    on left: 41 42, on right: 39
parameters_block (81)
    on left: 43 44, on right: 36 38
parameters (82)
    on left: 45 46, on right: 43 45
parameter (83)
    on left: 47, on right: 45 46
block (84)
    on left: 49, on right: 6
$@5 (85)
    on left: 48, on right: 49
simple (86)
    on left: 50 52 53 54 55 56 57 58, on right: 7
$@6 (87)
    on left: 51, on right: 52
when (88)
    on left: 59 60, on right: 56
expression (89)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80, on right: 50 52 54 58 59 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 82 87 88
function_procedure (90)
    on left: 81, on right: 79
array_reference (91)
    on left: 82, on right: 80
argument_body (92)
    on left: 83 84, on right: 81
arguments (93)
    on left: 85 86, on right: 83 85
func_expression (94)
    on left: 87, on right: 85 86
if_head (95)
    on left: 88, on right: 89 90
condition (96)
    on left: 89 90, on right: 8
loop (97)
    on left: 92 96, on right: 9
$@7 (98)
    on left: 91, on right: 92
$@8 (99)
    on left: 93, on right: 96
$@9 (100)
    on left: 94, on right: 96
$@10 (101)
    on left: 95, on right: 96
decreasing (102)
    on left: 97 98, on right: 96


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    3 program: $@1 . declarations $@2 statements

    $default  reduce using rule 11 (declarations)

    declarations  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 program: $@1 declarations . $@2 statements
   10 declarations: declarations . declaration_function

    ARRAY      shift, and go to state 5
    CONST      shift, and go to state 6
    FUNCTION   shift, and go to state 7
    PROCEDURE  shift, and go to state 8
    VAR        shift, and go to state 9

    $default  reduce using rule 2 ($@2)

    $@2                   go to state 10
    declaration_function  go to state 11
    declaration           go to state 12
    constants             go to state 13
    variable              go to state 14
    array                 go to state 15
    function              go to state 16
    procedure             go to state 17


State 5

   32 array: ARRAY . IDENTIFIER ':' ARRAY number '.' '.' number OF type

    IDENTIFIER  shift, and go to state 18


State 6

   18 constants: CONST . IDENTIFIER type ASSIGN constant_exp
   19          | CONST . IDENTIFIER ASSIGN constant_exp

    IDENTIFIER  shift, and go to state 19


State 7

   36 function: FUNCTION . IDENTIFIER $@3 '(' parameters_block ')' type function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 8

   38 procedure: PROCEDURE . IDENTIFIER $@4 '(' parameters_block ')' function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 21


State 9

   29 variable: VAR . IDENTIFIER type ASSIGN constant_exp
   30         | VAR . IDENTIFIER type
   31         | VAR . IDENTIFIER ASSIGN constant_exp

    IDENTIFIER  shift, and go to state 22


State 10

    3 program: $@1 declarations $@2 . statements

    $default  reduce using rule 5 (statements)

    statements  go to state 23


State 11

   10 declarations: declarations declaration_function .

    $default  reduce using rule 10 (declarations)


State 12

   12 declaration_function: declaration .

    $default  reduce using rule 12 (declaration_function)


State 13

   15 declaration: constants .

    $default  reduce using rule 15 (declaration)


State 14

   16 declaration: variable .

    $default  reduce using rule 16 (declaration)


State 15

   17 declaration: array .

    $default  reduce using rule 17 (declaration)


State 16

   13 declaration_function: function .

    $default  reduce using rule 13 (declaration_function)


State 17

   14 declaration_function: procedure .

    $default  reduce using rule 14 (declaration_function)


State 18

   32 array: ARRAY IDENTIFIER . ':' ARRAY number '.' '.' number OF type

    ':'  shift, and go to state 24


State 19

   18 constants: CONST IDENTIFIER . type ASSIGN constant_exp
   19          | CONST IDENTIFIER . ASSIGN constant_exp

    ASSIGN  shift, and go to state 25
    ':'     shift, and go to state 26

    type  go to state 27


State 20

   36 function: FUNCTION IDENTIFIER . $@3 '(' parameters_block ')' type function_bodys END IDENTIFIER

    $default  reduce using rule 35 ($@3)

    $@3  go to state 28


State 21

   38 procedure: PROCEDURE IDENTIFIER . $@4 '(' parameters_block ')' function_bodys END IDENTIFIER

    $default  reduce using rule 37 ($@4)

    $@4  go to state 29


State 22

   29 variable: VAR IDENTIFIER . type ASSIGN constant_exp
   30         | VAR IDENTIFIER . type
   31         | VAR IDENTIFIER . ASSIGN constant_exp

    ASSIGN  shift, and go to state 30
    ':'     shift, and go to state 26

    type  go to state 31


State 23

    3 program: $@1 declarations $@2 statements .
    4 statements: statements . statement

    BEGIN_            shift, and go to state 32
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    $default  reduce using rule 3 (program)

    statement           go to state 51
    constant_exp        go to state 52
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 24

   32 array: ARRAY IDENTIFIER ':' . ARRAY number '.' '.' number OF type

    ARRAY  shift, and go to state 61


State 25

   19 constants: CONST IDENTIFIER ASSIGN . constant_exp

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48

    constant_exp  go to state 62


State 26

   20 type: ':' . INT
   21     | ':' . REAL
   22     | ':' . BOOL
   23     | ':' . STRING

    BOOL    shift, and go to state 63
    INT     shift, and go to state 64
    REAL    shift, and go to state 65
    STRING  shift, and go to state 66


State 27

   18 constants: CONST IDENTIFIER type . ASSIGN constant_exp

    ASSIGN  shift, and go to state 67


State 28

   36 function: FUNCTION IDENTIFIER $@3 . '(' parameters_block ')' type function_bodys END IDENTIFIER

    '('  shift, and go to state 68


State 29

   38 procedure: PROCEDURE IDENTIFIER $@4 . '(' parameters_block ')' function_bodys END IDENTIFIER

    '('  shift, and go to state 69


State 30

   31 variable: VAR IDENTIFIER ASSIGN . constant_exp

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48

    constant_exp  go to state 70


State 31

   29 variable: VAR IDENTIFIER type . ASSIGN constant_exp
   30         | VAR IDENTIFIER type .

    ASSIGN  shift, and go to state 71

    $default  reduce using rule 30 (variable)


State 32

   49 block: BEGIN_ . $@5 function_bodys END

    $default  reduce using rule 48 ($@5)

    $@5  go to state 72


State 33

   56 simple: EXIT . when

    WHEN  shift, and go to state 73

    $default  reduce using rule 60 (when)

    when  go to state 74


State 34

   28 constant_exp: FALSE .

    $default  reduce using rule 28 (constant_exp)


State 35

   96 loop: FOR . decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys END FOR

    DECREASING  shift, and go to state 75

    $default  reduce using rule 98 (decreasing)

    decreasing  go to state 76


State 36

   53 simple: GET . IDENTIFIER

    IDENTIFIER  shift, and go to state 77


State 37

   88 if_head: IF . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 79
    function_procedure  go to state 56
    array_reference     go to state 57


State 38

   92 loop: LOOP . $@7 function_bodys END LOOP

    $default  reduce using rule 91 ($@7)

    $@7  go to state 80


State 39

   52 simple: PUT . $@6 expression

    $default  reduce using rule 51 ($@6)

    $@6  go to state 81


State 40

   54 simple: RESULT . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 82
    function_procedure  go to state 56
    array_reference     go to state 57


State 41

   55 simple: RETURN .

    $default  reduce using rule 55 (simple)


State 42

   57 simple: SKIP .

    $default  reduce using rule 57 (simple)


State 43

   27 constant_exp: TRUE .

    $default  reduce using rule 27 (constant_exp)


State 44

   69 expression: NOT . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 83
    function_procedure  go to state 56
    array_reference     go to state 57


State 45

   50 simple: IDENTIFIER . ASSIGN expression
   77 expression: IDENTIFIER .
   81 function_procedure: IDENTIFIER . '(' argument_body ')'
   82 array_reference: IDENTIFIER . '[' expression ']'

    ASSIGN  shift, and go to state 84
    '('     shift, and go to state 85
    '['     shift, and go to state 86

    $default  reduce using rule 77 (expression)


State 46

   24 constant_exp: INT_NUM .

    $default  reduce using rule 24 (constant_exp)


State 47

   25 constant_exp: REAL_NUM .

    $default  reduce using rule 25 (constant_exp)


State 48

   26 constant_exp: STRING_CONSTANTS .

    $default  reduce using rule 26 (constant_exp)


State 49

   66 expression: '-' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 87
    function_procedure  go to state 56
    array_reference     go to state 57


State 50

   76 expression: '(' . expression ')'

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 88
    function_procedure  go to state 56
    array_reference     go to state 57


State 51

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 52

   78 expression: constant_exp .

    $default  reduce using rule 78 (expression)


State 53

    6 statement: block .

    $default  reduce using rule 6 (statement)


State 54

    7 statement: simple .

    $default  reduce using rule 7 (statement)


State 55

   58 simple: expression .
   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    '-'       [reduce using rule 58 (simple)]
    $default  reduce using rule 58 (simple)


State 56

   79 expression: function_procedure .

    $default  reduce using rule 79 (expression)


State 57

   80 expression: array_reference .

    $default  reduce using rule 80 (expression)


State 58

   89 condition: if_head . THEN function_bodys ELSE function_bodys END IF
   90          | if_head . THEN function_bodys END IF

    THEN  shift, and go to state 102


State 59

    8 statement: condition .

    $default  reduce using rule 8 (statement)


State 60

    9 statement: loop .

    $default  reduce using rule 9 (statement)


State 61

   32 array: ARRAY IDENTIFIER ':' ARRAY . number '.' '.' number OF type

    IDENTIFIER  shift, and go to state 103
    INT_NUM     shift, and go to state 104

    number  go to state 105


State 62

   19 constants: CONST IDENTIFIER ASSIGN constant_exp .

    $default  reduce using rule 19 (constants)


State 63

   22 type: ':' BOOL .

    $default  reduce using rule 22 (type)


State 64

   20 type: ':' INT .

    $default  reduce using rule 20 (type)


State 65

   21 type: ':' REAL .

    $default  reduce using rule 21 (type)


State 66

   23 type: ':' STRING .

    $default  reduce using rule 23 (type)


State 67

   18 constants: CONST IDENTIFIER type ASSIGN . constant_exp

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48

    constant_exp  go to state 106


State 68

   36 function: FUNCTION IDENTIFIER $@3 '(' . parameters_block ')' type function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 44 (parameters_block)

    parameters_block  go to state 108
    parameters        go to state 109
    parameter         go to state 110


State 69

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' . parameters_block ')' function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 44 (parameters_block)

    parameters_block  go to state 111
    parameters        go to state 109
    parameter         go to state 110


State 70

   31 variable: VAR IDENTIFIER ASSIGN constant_exp .

    $default  reduce using rule 31 (variable)


State 71

   29 variable: VAR IDENTIFIER type ASSIGN . constant_exp

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48

    constant_exp  go to state 112


State 72

   49 block: BEGIN_ $@5 . function_bodys END

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 113


State 73

   59 when: WHEN . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 114
    function_procedure  go to state 56
    array_reference     go to state 57


State 74

   56 simple: EXIT when .

    $default  reduce using rule 56 (simple)


State 75

   97 decreasing: DECREASING .

    $default  reduce using rule 97 (decreasing)


State 76

   96 loop: FOR decreasing . $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys END FOR

    $default  reduce using rule 93 ($@8)

    $@8  go to state 115


State 77

   53 simple: GET IDENTIFIER .

    $default  reduce using rule 53 (simple)


State 78

   77 expression: IDENTIFIER .
   81 function_procedure: IDENTIFIER . '(' argument_body ')'
   82 array_reference: IDENTIFIER . '[' expression ']'

    '('  shift, and go to state 85
    '['  shift, and go to state 86

    $default  reduce using rule 77 (expression)


State 79

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression
   88 if_head: IF expression .

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 88 (if_head)


State 80

   92 loop: LOOP $@7 . function_bodys END LOOP

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 116


State 81

   52 simple: PUT $@6 . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 117
    function_procedure  go to state 56
    array_reference     go to state 57


State 82

   54 simple: RESULT expression .
   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    '-'       [reduce using rule 54 (simple)]
    $default  reduce using rule 54 (simple)


State 83

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   69           | NOT expression .
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 69 (expression)


State 84

   50 simple: IDENTIFIER ASSIGN . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 118
    function_procedure  go to state 56
    array_reference     go to state 57


State 85

   81 function_procedure: IDENTIFIER '(' . argument_body ')'

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    $default  reduce using rule 84 (argument_body)

    constant_exp        go to state 52
    expression          go to state 119
    function_procedure  go to state 56
    array_reference     go to state 57
    argument_body       go to state 120
    arguments           go to state 121
    func_expression     go to state 122


State 86

   82 array_reference: IDENTIFIER '[' . expression ']'

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 123
    function_procedure  go to state 56
    array_reference     go to state 57


State 87

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   66           | '-' expression .
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    $default  reduce using rule 66 (expression)


State 88

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression
   76           | '(' expression . ')'

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ')'      shift, and go to state 124


State 89

   67 expression: expression AND . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 125
    function_procedure  go to state 56
    array_reference     go to state 57


State 90

   68 expression: expression OR . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 126
    function_procedure  go to state 56
    array_reference     go to state 57


State 91

   75 expression: expression NOT_EQU . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 127
    function_procedure  go to state 56
    array_reference     go to state 57


State 92

   71 expression: expression LE . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 128
    function_procedure  go to state 56
    array_reference     go to state 57


State 93

   73 expression: expression GE . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 129
    function_procedure  go to state 56
    array_reference     go to state 57


State 94

   65 expression: expression MOD . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 130
    function_procedure  go to state 56
    array_reference     go to state 57


State 95

   70 expression: expression '<' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 131
    function_procedure  go to state 56
    array_reference     go to state 57


State 96

   72 expression: expression '=' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 132
    function_procedure  go to state 56
    array_reference     go to state 57


State 97

   74 expression: expression '>' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 133
    function_procedure  go to state 56
    array_reference     go to state 57


State 98

   61 expression: expression '+' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 134
    function_procedure  go to state 56
    array_reference     go to state 57


State 99

   62 expression: expression '-' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 135
    function_procedure  go to state 56
    array_reference     go to state 57


State 100

   63 expression: expression '*' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 136
    function_procedure  go to state 56
    array_reference     go to state 57


State 101

   64 expression: expression '/' . expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 137
    function_procedure  go to state 56
    array_reference     go to state 57


State 102

   89 condition: if_head THEN . function_bodys ELSE function_bodys END IF
   90          | if_head THEN . function_bodys END IF

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 138


State 103

   34 number: IDENTIFIER .

    $default  reduce using rule 34 (number)


State 104

   33 number: INT_NUM .

    $default  reduce using rule 33 (number)


State 105

   32 array: ARRAY IDENTIFIER ':' ARRAY number . '.' '.' number OF type

    '.'  shift, and go to state 139


State 106

   18 constants: CONST IDENTIFIER type ASSIGN constant_exp .

    $default  reduce using rule 18 (constants)


State 107

   47 parameter: IDENTIFIER . type

    ':'  shift, and go to state 26

    type  go to state 140


State 108

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block . ')' type function_bodys END IDENTIFIER

    ')'  shift, and go to state 141


State 109

   43 parameters_block: parameters .
   45 parameters: parameters . ',' parameter

    ','  shift, and go to state 142

    $default  reduce using rule 43 (parameters_block)


State 110

   46 parameters: parameter .

    $default  reduce using rule 46 (parameters)


State 111

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' parameters_block . ')' function_bodys END IDENTIFIER

    ')'  shift, and go to state 143


State 112

   29 variable: VAR IDENTIFIER type ASSIGN constant_exp .

    $default  reduce using rule 29 (variable)


State 113

   39 function_bodys: function_bodys . function_body
   49 block: BEGIN_ $@5 function_bodys . END

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    END               shift, and go to state 144
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 114

   59 when: WHEN expression .
   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    '-'       [reduce using rule 59 (when)]
    $default  reduce using rule 59 (when)


State 115

   96 loop: FOR decreasing $@8 . IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys END FOR

    IDENTIFIER  shift, and go to state 148


State 116

   39 function_bodys: function_bodys . function_body
   92 loop: LOOP $@7 function_bodys . END LOOP

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    END               shift, and go to state 149
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 117

   52 simple: PUT $@6 expression .
   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    '-'       [reduce using rule 52 (simple)]
    $default  reduce using rule 52 (simple)


State 118

   50 simple: IDENTIFIER ASSIGN expression .
   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 50 (simple)


State 119

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression
   87 func_expression: expression .

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 87 (func_expression)


State 120

   81 function_procedure: IDENTIFIER '(' argument_body . ')'

    ')'  shift, and go to state 150


State 121

   83 argument_body: arguments .
   85 arguments: arguments . ',' func_expression

    ','  shift, and go to state 151

    $default  reduce using rule 83 (argument_body)


State 122

   86 arguments: func_expression .

    $default  reduce using rule 86 (arguments)


State 123

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression
   82 array_reference: IDENTIFIER '[' expression . ']'

    AND      shift, and go to state 89
    OR       shift, and go to state 90
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ']'      shift, and go to state 152


State 124

   76 expression: '(' expression ')' .

    $default  reduce using rule 76 (expression)


State 125

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   67           | expression AND expression .
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 67 (expression)


State 126

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   68           | expression OR expression .
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    AND      shift, and go to state 89
    NOT_EQU  shift, and go to state 91
    LE       shift, and go to state 92
    GE       shift, and go to state 93
    MOD      shift, and go to state 94
    '<'      shift, and go to state 95
    '='      shift, and go to state 96
    '>'      shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    OR  error (nonassociative)

    $default  reduce using rule 68 (expression)


State 127

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression
   75           | expression NOT_EQU expression .

    MOD  shift, and go to state 94
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 75 (expression)


State 128

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   71           | expression LE expression .
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 71 (expression)


State 129

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   73           | expression GE expression .
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 73 (expression)


State 130

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   65           | expression MOD expression .
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    $default  reduce using rule 65 (expression)


State 131

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   70           | expression '<' expression .
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 70 (expression)


State 132

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   72           | expression '=' expression .
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 72 (expression)


State 133

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   74           | expression '>' expression .
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 74 (expression)


State 134

   61 expression: expression . '+' expression
   61           | expression '+' expression .
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 61 (expression)


State 135

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   62           | expression '-' expression .
   63           | expression . '*' expression
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    MOD  shift, and go to state 94
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 62 (expression)


State 136

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   63           | expression '*' expression .
   64           | expression . '/' expression
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    $default  reduce using rule 63 (expression)


State 137

   61 expression: expression . '+' expression
   62           | expression . '-' expression
   63           | expression . '*' expression
   64           | expression . '/' expression
   64           | expression '/' expression .
   65           | expression . MOD expression
   67           | expression . AND expression
   68           | expression . OR expression
   70           | expression . '<' expression
   71           | expression . LE expression
   72           | expression . '=' expression
   73           | expression . GE expression
   74           | expression . '>' expression
   75           | expression . NOT_EQU expression

    $default  reduce using rule 64 (expression)


State 138

   39 function_bodys: function_bodys . function_body
   89 condition: if_head THEN function_bodys . ELSE function_bodys END IF
   90          | if_head THEN function_bodys . END IF

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    ELSE              shift, and go to state 153
    END               shift, and go to state 154
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 139

   32 array: ARRAY IDENTIFIER ':' ARRAY number '.' . '.' number OF type

    '.'  shift, and go to state 155


State 140

   47 parameter: IDENTIFIER type .

    $default  reduce using rule 47 (parameter)


State 141

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block ')' . type function_bodys END IDENTIFIER

    ':'  shift, and go to state 26

    type  go to state 156


State 142

   45 parameters: parameters ',' . parameter

    IDENTIFIER  shift, and go to state 107

    parameter  go to state 157


State 143

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' parameters_block ')' . function_bodys END IDENTIFIER

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 158


State 144

   49 block: BEGIN_ $@5 function_bodys END .

    $default  reduce using rule 49 (block)


State 145

   42 function_body: statement .

    $default  reduce using rule 42 (function_body)


State 146

   41 function_body: declaration .

    $default  reduce using rule 41 (function_body)


State 147

   39 function_bodys: function_bodys function_body .

    $default  reduce using rule 39 (function_bodys)


State 148

   96 loop: FOR decreasing $@8 IDENTIFIER . $@9 ':' number '.' '.' number $@10 function_bodys END FOR

    $default  reduce using rule 94 ($@9)

    $@9  go to state 159


State 149

   92 loop: LOOP $@7 function_bodys END . LOOP

    LOOP  shift, and go to state 160


State 150

   81 function_procedure: IDENTIFIER '(' argument_body ')' .

    $default  reduce using rule 81 (function_procedure)


State 151

   85 arguments: arguments ',' . func_expression

    FALSE             shift, and go to state 34
    TRUE              shift, and go to state 43
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 78
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    constant_exp        go to state 52
    expression          go to state 119
    function_procedure  go to state 56
    array_reference     go to state 57
    func_expression     go to state 161


State 152

   82 array_reference: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 82 (array_reference)


State 153

   89 condition: if_head THEN function_bodys ELSE . function_bodys END IF

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 162


State 154

   90 condition: if_head THEN function_bodys END . IF

    IF  shift, and go to state 163


State 155

   32 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' . number OF type

    IDENTIFIER  shift, and go to state 103
    INT_NUM     shift, and go to state 104

    number  go to state 164


State 156

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block ')' type . function_bodys END IDENTIFIER

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 165


State 157

   45 parameters: parameters ',' parameter .

    $default  reduce using rule 45 (parameters)


State 158

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' parameters_block ')' function_bodys . END IDENTIFIER
   39 function_bodys: function_bodys . function_body

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    END               shift, and go to state 166
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 159

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 . ':' number '.' '.' number $@10 function_bodys END FOR

    ':'  shift, and go to state 167


State 160

   92 loop: LOOP $@7 function_bodys END LOOP .

    $default  reduce using rule 92 (loop)


State 161

   85 arguments: arguments ',' func_expression .

    $default  reduce using rule 85 (arguments)


State 162

   39 function_bodys: function_bodys . function_body
   89 condition: if_head THEN function_bodys ELSE function_bodys . END IF

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    END               shift, and go to state 168
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 163

   90 condition: if_head THEN function_bodys END IF .

    $default  reduce using rule 90 (condition)


State 164

   32 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number . OF type

    OF  shift, and go to state 169


State 165

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block ')' type function_bodys . END IDENTIFIER
   39 function_bodys: function_bodys . function_body

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    END               shift, and go to state 170
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 166

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' parameters_block ')' function_bodys END . IDENTIFIER

    IDENTIFIER  shift, and go to state 171


State 167

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' . number '.' '.' number $@10 function_bodys END FOR

    IDENTIFIER  shift, and go to state 103
    INT_NUM     shift, and go to state 104

    number  go to state 172


State 168

   89 condition: if_head THEN function_bodys ELSE function_bodys END . IF

    IF  shift, and go to state 173


State 169

   32 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number OF . type

    ':'  shift, and go to state 26

    type  go to state 174


State 170

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block ')' type function_bodys END . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 171

   38 procedure: PROCEDURE IDENTIFIER $@4 '(' parameters_block ')' function_bodys END IDENTIFIER .

    $default  reduce using rule 38 (procedure)


State 172

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number . '.' '.' number $@10 function_bodys END FOR

    '.'  shift, and go to state 176


State 173

   89 condition: if_head THEN function_bodys ELSE function_bodys END IF .

    $default  reduce using rule 89 (condition)


State 174

   32 array: ARRAY IDENTIFIER ':' ARRAY number '.' '.' number OF type .

    $default  reduce using rule 32 (array)


State 175

   36 function: FUNCTION IDENTIFIER $@3 '(' parameters_block ')' type function_bodys END IDENTIFIER .

    $default  reduce using rule 36 (function)


State 176

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' . '.' number $@10 function_bodys END FOR

    '.'  shift, and go to state 177


State 177

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' . number $@10 function_bodys END FOR

    IDENTIFIER  shift, and go to state 103
    INT_NUM     shift, and go to state 104

    number  go to state 178


State 178

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number . $@10 function_bodys END FOR

    $default  reduce using rule 95 ($@10)

    $@10  go to state 179


State 179

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 . function_bodys END FOR

    $default  reduce using rule 40 (function_bodys)

    function_bodys  go to state 180


State 180

   39 function_bodys: function_bodys . function_body
   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys . END FOR

    ARRAY             shift, and go to state 5
    BEGIN_            shift, and go to state 32
    CONST             shift, and go to state 6
    END               shift, and go to state 181
    EXIT              shift, and go to state 33
    FALSE             shift, and go to state 34
    FOR               shift, and go to state 35
    GET               shift, and go to state 36
    IF                shift, and go to state 37
    LOOP              shift, and go to state 38
    PUT               shift, and go to state 39
    RESULT            shift, and go to state 40
    RETURN            shift, and go to state 41
    SKIP              shift, and go to state 42
    TRUE              shift, and go to state 43
    VAR               shift, and go to state 9
    NOT               shift, and go to state 44
    IDENTIFIER        shift, and go to state 45
    INT_NUM           shift, and go to state 46
    REAL_NUM          shift, and go to state 47
    STRING_CONSTANTS  shift, and go to state 48
    '-'               shift, and go to state 49
    '('               shift, and go to state 50

    statement           go to state 145
    declaration         go to state 146
    constants           go to state 13
    constant_exp        go to state 52
    variable            go to state 14
    array               go to state 15
    function_body       go to state 147
    block               go to state 53
    simple              go to state 54
    expression          go to state 55
    function_procedure  go to state 56
    array_reference     go to state 57
    if_head             go to state 58
    condition           go to state 59
    loop                go to state 60


State 181

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys END . FOR

    FOR  shift, and go to state 182


State 182

   96 loop: FOR decreasing $@8 IDENTIFIER $@9 ':' number '.' '.' number $@10 function_bodys END FOR .

    $default  reduce using rule 96 (loop)
