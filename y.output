Terminals unused in grammar

   DEFAULT
   DO


State 20 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations statements

    2 statements: statements statement
    3           | %empty

    4 statement: block
    5          | simple
    6          | condition
    7          | loop

    8 declarations: declarations declaration_function
    9             | %empty

   10 declaration_function: declaration
   11                     | function
   12                     | procedure

   13 declaration: constants
   14            | variable
   15            | array

   16 constants: CONST IDENTIFIER constant_type ASSIGN constant_exp

   17 constant_type: type
   18              | %empty

   19 type: ':' INT
   20     | ':' REAL
   21     | ':' BOOL
   22     | ':' CHAR
   23     | ':' STRING

   24 constant_exp: NUMBER
   25             | STRING_CONSTANTS
   26             | TRUE
   27             | FALSE

   28 variable: VAR IDENTIFIER type ASSIGN constant_exp
   29         | VAR IDENTIFIER type
   30         | VAR IDENTIFIER ASSIGN constant_exp

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER '.' '.' NUMBER OF type

   32 function: FUNCTION IDENTIFIER parameters_block type function_bodys END IDENTIFIER

   33 procedure: PROCEDURE IDENTIFIER parameters_block function_bodys END IDENTIFIER

   34 function_bodys: function_bodys function_body
   35               | %empty

   36 function_body: declaration
   37              | statement

   38 parameters_block: '(' parameters ')'
   39                 | %empty

   40 parameters: parameters ',' parameter
   41           | parameter

   42 parameter: IDENTIFIER type

   43 block: BEGIN_ function_bodys END

   44 simple: IDENTIFIER ASSIGN expression
   45       | PUT expression
   46       | GET IDENTIFIER
   47       | RESULT expression
   48       | RETURN
   49       | EXIT when
   50       | SKIP
   51       | expression

   52 when: WHEN expression
   53     | %empty

   54 expression: expression '+' expression
   55           | expression '-' expression
   56           | expression '*' expression
   57           | expression '/' expression
   58           | expression MOD expression
   59           | '-' expression
   60           | expression AND expression
   61           | expression OR expression
   62           | expression NOT expression
   63           | expression '<' expression
   64           | expression LE expression
   65           | expression '=' expression
   66           | expression GE expression
   67           | expression '>' expression
   68           | expression NOT_EQU expression
   69           | '(' expression ')'
   70           | IDENTIFIER
   71           | constant_exp
   72           | function_procedure
   73           | array_reference

   74 function_procedure: IDENTIFIER '(' arguments ')'

   75 array_reference: IDENTIFIER '[' expression ']'

   76 arguments: arguments ',' expression
   77          | expression

   78 condition: IF expression THEN function_bodys ELSE function_bodys END IF
   79          | IF expression THEN function_bodys END IF

   80 loop: LOOP function_bodys END LOOP
   81     | FOR decreasing IDENTIFIER ':' num '.' '.' num function_bodys END FOR

   82 num: NUMBER
   83    | IDENTIFIER

   84 decreasing: DECREASING
   85           | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 38 69 74
')' (41) 38 69 74
'*' (42) 56
'+' (43) 54
',' (44) 40 76
'-' (45) 55 59
'.' (46) 31 81
'/' (47) 57
':' (58) 19 20 21 22 23 31 81
'<' (60) 63
'=' (61) 65
'>' (62) 67
'[' (91) 75
']' (93) 75
error (256)
ARRAY (258) 31
BEGIN_ (259) 43
BOOL (260) 21
CHAR (261) 22
CONST (262) 16
DECREASING (263) 84
DEFAULT (264)
DO (265)
ELSE (266) 78
END (267) 32 33 43 78 79 80 81
EXIT (268) 49
FALSE (269) 27
FOR (270) 81
FUNCTION (271) 32
GET (272) 46
IF (273) 78 79
INT (274) 19
LOOP (275) 80
OF (276) 31
PUT (277) 45
PROCEDURE (278) 33
REAL (279) 20
RESULT (280) 47
RETURN (281) 48
SKIP (282) 50
STRING (283) 23
THEN (284) 78 79
TRUE (285) 26
VAR (286) 28 29 30
WHEN (287) 52
IDENTIFIER (288) 16 28 29 30 31 32 33 42 44 46 70 74 75 81 83
NUMBER (289) 24 31 82
STRING_CONSTANTS (290) 25
ASSIGN (291) 16 28 30 44
AND (292) 60
OR (293) 61
NOT (294) 62
NOT_EQU (295) 68
LE (296) 64
GE (297) 66
MOD (298) 58
UMINUS (299)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
statements (61)
    on left: 2 3, on right: 1 2
statement (62)
    on left: 4 5 6 7, on right: 2 37
declarations (63)
    on left: 8 9, on right: 1 8
declaration_function (64)
    on left: 10 11 12, on right: 8
declaration (65)
    on left: 13 14 15, on right: 10 36
constants (66)
    on left: 16, on right: 13
constant_type (67)
    on left: 17 18, on right: 16
type (68)
    on left: 19 20 21 22 23, on right: 17 28 29 31 32 42
constant_exp (69)
    on left: 24 25 26 27, on right: 16 28 30 71
variable (70)
    on left: 28 29 30, on right: 14
array (71)
    on left: 31, on right: 15
function (72)
    on left: 32, on right: 11
procedure (73)
    on left: 33, on right: 12
function_bodys (74)
    on left: 34 35, on right: 32 33 34 43 78 79 80 81
function_body (75)
    on left: 36 37, on right: 34
parameters_block (76)
    on left: 38 39, on right: 32 33
parameters (77)
    on left: 40 41, on right: 38 40
parameter (78)
    on left: 42, on right: 40 41
block (79)
    on left: 43, on right: 4
simple (80)
    on left: 44 45 46 47 48 49 50 51, on right: 5
when (81)
    on left: 52 53, on right: 49
expression (82)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73, on right: 44 45 47 51 52 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 75 76 77 78 79
function_procedure (83)
    on left: 74, on right: 72
array_reference (84)
    on left: 75, on right: 73
arguments (85)
    on left: 76 77, on right: 74 76
condition (86)
    on left: 78 79, on right: 6
loop (87)
    on left: 80 81, on right: 7
num (88)
    on left: 82 83, on right: 81
decreasing (89)
    on left: 84 85, on right: 81


State 0

    0 $accept: . program $end

    $default  reduce using rule 9 (declarations)

    program       go to state 1
    declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declarations . statements
    8 declarations: declarations . declaration_function

    ARRAY      shift, and go to state 4
    CONST      shift, and go to state 5
    FUNCTION   shift, and go to state 6
    PROCEDURE  shift, and go to state 7
    VAR        shift, and go to state 8

    $default  reduce using rule 3 (statements)

    statements            go to state 9
    declaration_function  go to state 10
    declaration           go to state 11
    constants             go to state 12
    variable              go to state 13
    array                 go to state 14
    function              go to state 15
    procedure             go to state 16


State 3

    0 $accept: program $end .

    $default  accept


State 4

   31 array: ARRAY . IDENTIFIER ':' ARRAY NUMBER '.' '.' NUMBER OF type

    IDENTIFIER  shift, and go to state 17


State 5

   16 constants: CONST . IDENTIFIER constant_type ASSIGN constant_exp

    IDENTIFIER  shift, and go to state 18


State 6

   32 function: FUNCTION . IDENTIFIER parameters_block type function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 19


State 7

   33 procedure: PROCEDURE . IDENTIFIER parameters_block function_bodys END IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 8

   28 variable: VAR . IDENTIFIER type ASSIGN constant_exp
   29         | VAR . IDENTIFIER type
   30         | VAR . IDENTIFIER ASSIGN constant_exp

    IDENTIFIER  shift, and go to state 21


State 9

    1 program: declarations statements .
    2 statements: statements . statement

    BEGIN_            shift, and go to state 22
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    $default  reduce using rule 1 (program)

    statement           go to state 39
    constant_exp        go to state 40
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 10

    8 declarations: declarations declaration_function .

    $default  reduce using rule 8 (declarations)


State 11

   10 declaration_function: declaration .

    $default  reduce using rule 10 (declaration_function)


State 12

   13 declaration: constants .

    $default  reduce using rule 13 (declaration)


State 13

   14 declaration: variable .

    $default  reduce using rule 14 (declaration)


State 14

   15 declaration: array .

    $default  reduce using rule 15 (declaration)


State 15

   11 declaration_function: function .

    $default  reduce using rule 11 (declaration_function)


State 16

   12 declaration_function: procedure .

    $default  reduce using rule 12 (declaration_function)


State 17

   31 array: ARRAY IDENTIFIER . ':' ARRAY NUMBER '.' '.' NUMBER OF type

    ':'  shift, and go to state 48


State 18

   16 constants: CONST IDENTIFIER . constant_type ASSIGN constant_exp

    ':'  shift, and go to state 49

    $default  reduce using rule 18 (constant_type)

    constant_type  go to state 50
    type           go to state 51


State 19

   32 function: FUNCTION IDENTIFIER . parameters_block type function_bodys END IDENTIFIER

    '('  shift, and go to state 52

    $default  reduce using rule 39 (parameters_block)

    parameters_block  go to state 53


State 20

   33 procedure: PROCEDURE IDENTIFIER . parameters_block function_bodys END IDENTIFIER

    '('  shift, and go to state 52

    '('       [reduce using rule 39 (parameters_block)]
    $default  reduce using rule 39 (parameters_block)

    parameters_block  go to state 54


State 21

   28 variable: VAR IDENTIFIER . type ASSIGN constant_exp
   29         | VAR IDENTIFIER . type
   30         | VAR IDENTIFIER . ASSIGN constant_exp

    ASSIGN  shift, and go to state 55
    ':'     shift, and go to state 49

    type  go to state 56


State 22

   43 block: BEGIN_ . function_bodys END

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 57


State 23

   49 simple: EXIT . when

    WHEN  shift, and go to state 58

    $default  reduce using rule 53 (when)

    when  go to state 59


State 24

   27 constant_exp: FALSE .

    $default  reduce using rule 27 (constant_exp)


State 25

   81 loop: FOR . decreasing IDENTIFIER ':' num '.' '.' num function_bodys END FOR

    DECREASING  shift, and go to state 60

    $default  reduce using rule 85 (decreasing)

    decreasing  go to state 61


State 26

   46 simple: GET . IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 27

   78 condition: IF . expression THEN function_bodys ELSE function_bodys END IF
   79          | IF . expression THEN function_bodys END IF

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 64
    function_procedure  go to state 44
    array_reference     go to state 45


State 28

   80 loop: LOOP . function_bodys END LOOP

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 65


State 29

   45 simple: PUT . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 66
    function_procedure  go to state 44
    array_reference     go to state 45


State 30

   47 simple: RESULT . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 67
    function_procedure  go to state 44
    array_reference     go to state 45


State 31

   48 simple: RETURN .

    $default  reduce using rule 48 (simple)


State 32

   50 simple: SKIP .

    $default  reduce using rule 50 (simple)


State 33

   26 constant_exp: TRUE .

    $default  reduce using rule 26 (constant_exp)


State 34

   44 simple: IDENTIFIER . ASSIGN expression
   70 expression: IDENTIFIER .
   74 function_procedure: IDENTIFIER . '(' arguments ')'
   75 array_reference: IDENTIFIER . '[' expression ']'

    ASSIGN  shift, and go to state 68
    '('     shift, and go to state 69
    '['     shift, and go to state 70

    '('       [reduce using rule 70 (expression)]
    $default  reduce using rule 70 (expression)


State 35

   24 constant_exp: NUMBER .

    $default  reduce using rule 24 (constant_exp)


State 36

   25 constant_exp: STRING_CONSTANTS .

    $default  reduce using rule 25 (constant_exp)


State 37

   59 expression: '-' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 71
    function_procedure  go to state 44
    array_reference     go to state 45


State 38

   69 expression: '(' . expression ')'

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 72
    function_procedure  go to state 44
    array_reference     go to state 45


State 39

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


State 40

   71 expression: constant_exp .

    $default  reduce using rule 71 (expression)


State 41

    4 statement: block .

    $default  reduce using rule 4 (statement)


State 42

    5 statement: simple .

    $default  reduce using rule 5 (statement)


State 43

   51 simple: expression .
   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 51 (simple)]
    $default  reduce using rule 51 (simple)


State 44

   72 expression: function_procedure .

    $default  reduce using rule 72 (expression)


State 45

   73 expression: array_reference .

    $default  reduce using rule 73 (expression)


State 46

    6 statement: condition .

    $default  reduce using rule 6 (statement)


State 47

    7 statement: loop .

    $default  reduce using rule 7 (statement)


State 48

   31 array: ARRAY IDENTIFIER ':' . ARRAY NUMBER '.' '.' NUMBER OF type

    ARRAY  shift, and go to state 87


State 49

   19 type: ':' . INT
   20     | ':' . REAL
   21     | ':' . BOOL
   22     | ':' . CHAR
   23     | ':' . STRING

    BOOL    shift, and go to state 88
    CHAR    shift, and go to state 89
    INT     shift, and go to state 90
    REAL    shift, and go to state 91
    STRING  shift, and go to state 92


State 50

   16 constants: CONST IDENTIFIER constant_type . ASSIGN constant_exp

    ASSIGN  shift, and go to state 93


State 51

   17 constant_type: type .

    $default  reduce using rule 17 (constant_type)


State 52

   38 parameters_block: '(' . parameters ')'

    IDENTIFIER  shift, and go to state 94

    parameters  go to state 95
    parameter   go to state 96


State 53

   32 function: FUNCTION IDENTIFIER parameters_block . type function_bodys END IDENTIFIER

    ':'  shift, and go to state 49

    type  go to state 97


State 54

   33 procedure: PROCEDURE IDENTIFIER parameters_block . function_bodys END IDENTIFIER

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 98


State 55

   30 variable: VAR IDENTIFIER ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36

    constant_exp  go to state 99


State 56

   28 variable: VAR IDENTIFIER type . ASSIGN constant_exp
   29         | VAR IDENTIFIER type .

    ASSIGN  shift, and go to state 100

    $default  reduce using rule 29 (variable)


State 57

   34 function_bodys: function_bodys . function_body
   43 block: BEGIN_ function_bodys . END

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 101
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 58

   52 when: WHEN . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 105
    function_procedure  go to state 44
    array_reference     go to state 45


State 59

   49 simple: EXIT when .

    $default  reduce using rule 49 (simple)


State 60

   84 decreasing: DECREASING .

    $default  reduce using rule 84 (decreasing)


State 61

   81 loop: FOR decreasing . IDENTIFIER ':' num '.' '.' num function_bodys END FOR

    IDENTIFIER  shift, and go to state 106


State 62

   46 simple: GET IDENTIFIER .

    $default  reduce using rule 46 (simple)


State 63

   70 expression: IDENTIFIER .
   74 function_procedure: IDENTIFIER . '(' arguments ')'
   75 array_reference: IDENTIFIER . '[' expression ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    '('       [reduce using rule 70 (expression)]
    $default  reduce using rule 70 (expression)


State 64

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression
   78 condition: IF expression . THEN function_bodys ELSE function_bodys END IF
   79          | IF expression . THEN function_bodys END IF

    THEN     shift, and go to state 107
    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86


State 65

   34 function_bodys: function_bodys . function_body
   80 loop: LOOP function_bodys . END LOOP

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 108
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 66

   45 simple: PUT expression .
   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 45 (simple)]
    $default  reduce using rule 45 (simple)


State 67

   47 simple: RESULT expression .
   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 47 (simple)]
    $default  reduce using rule 47 (simple)


State 68

   44 simple: IDENTIFIER ASSIGN . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 109
    function_procedure  go to state 44
    array_reference     go to state 45


State 69

   74 function_procedure: IDENTIFIER '(' . arguments ')'

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 110
    function_procedure  go to state 44
    array_reference     go to state 45
    arguments           go to state 111


State 70

   75 array_reference: IDENTIFIER '[' . expression ']'

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 112
    function_procedure  go to state 44
    array_reference     go to state 45


State 71

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   59           | '-' expression .
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    $default  reduce using rule 59 (expression)


State 72

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression
   69           | '(' expression . ')'

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    ')'      shift, and go to state 113


State 73

   60 expression: expression AND . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 114
    function_procedure  go to state 44
    array_reference     go to state 45


State 74

   61 expression: expression OR . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 115
    function_procedure  go to state 44
    array_reference     go to state 45


State 75

   62 expression: expression NOT . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 116
    function_procedure  go to state 44
    array_reference     go to state 45


State 76

   68 expression: expression NOT_EQU . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 117
    function_procedure  go to state 44
    array_reference     go to state 45


State 77

   64 expression: expression LE . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 118
    function_procedure  go to state 44
    array_reference     go to state 45


State 78

   66 expression: expression GE . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 119
    function_procedure  go to state 44
    array_reference     go to state 45


State 79

   58 expression: expression MOD . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 120
    function_procedure  go to state 44
    array_reference     go to state 45


State 80

   63 expression: expression '<' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 121
    function_procedure  go to state 44
    array_reference     go to state 45


State 81

   65 expression: expression '=' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 122
    function_procedure  go to state 44
    array_reference     go to state 45


State 82

   67 expression: expression '>' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 123
    function_procedure  go to state 44
    array_reference     go to state 45


State 83

   54 expression: expression '+' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 124
    function_procedure  go to state 44
    array_reference     go to state 45


State 84

   55 expression: expression '-' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 125
    function_procedure  go to state 44
    array_reference     go to state 45


State 85

   56 expression: expression '*' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 126
    function_procedure  go to state 44
    array_reference     go to state 45


State 86

   57 expression: expression '/' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 127
    function_procedure  go to state 44
    array_reference     go to state 45


State 87

   31 array: ARRAY IDENTIFIER ':' ARRAY . NUMBER '.' '.' NUMBER OF type

    NUMBER  shift, and go to state 128


State 88

   21 type: ':' BOOL .

    $default  reduce using rule 21 (type)


State 89

   22 type: ':' CHAR .

    $default  reduce using rule 22 (type)


State 90

   19 type: ':' INT .

    $default  reduce using rule 19 (type)


State 91

   20 type: ':' REAL .

    $default  reduce using rule 20 (type)


State 92

   23 type: ':' STRING .

    $default  reduce using rule 23 (type)


State 93

   16 constants: CONST IDENTIFIER constant_type ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36

    constant_exp  go to state 129


State 94

   42 parameter: IDENTIFIER . type

    ':'  shift, and go to state 49

    type  go to state 130


State 95

   38 parameters_block: '(' parameters . ')'
   40 parameters: parameters . ',' parameter

    ')'  shift, and go to state 131
    ','  shift, and go to state 132


State 96

   41 parameters: parameter .

    $default  reduce using rule 41 (parameters)


State 97

   32 function: FUNCTION IDENTIFIER parameters_block type . function_bodys END IDENTIFIER

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 133


State 98

   33 procedure: PROCEDURE IDENTIFIER parameters_block function_bodys . END IDENTIFIER
   34 function_bodys: function_bodys . function_body

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 134
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 99

   30 variable: VAR IDENTIFIER ASSIGN constant_exp .

    $default  reduce using rule 30 (variable)


State 100

   28 variable: VAR IDENTIFIER type ASSIGN . constant_exp

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36

    constant_exp  go to state 135


State 101

   43 block: BEGIN_ function_bodys END .

    $default  reduce using rule 43 (block)


State 102

   37 function_body: statement .

    $default  reduce using rule 37 (function_body)


State 103

   36 function_body: declaration .

    $default  reduce using rule 36 (function_body)


State 104

   34 function_bodys: function_bodys function_body .

    $default  reduce using rule 34 (function_bodys)


State 105

   52 when: WHEN expression .
   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 52 (when)]
    $default  reduce using rule 52 (when)


State 106

   81 loop: FOR decreasing IDENTIFIER . ':' num '.' '.' num function_bodys END FOR

    ':'  shift, and go to state 136


State 107

   78 condition: IF expression THEN . function_bodys ELSE function_bodys END IF
   79          | IF expression THEN . function_bodys END IF

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 137


State 108

   80 loop: LOOP function_bodys END . LOOP

    LOOP  shift, and go to state 138


State 109

   44 simple: IDENTIFIER ASSIGN expression .
   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    '-'       [reduce using rule 44 (simple)]
    $default  reduce using rule 44 (simple)


State 110

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression
   77 arguments: expression .

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 77 (arguments)


State 111

   74 function_procedure: IDENTIFIER '(' arguments . ')'
   76 arguments: arguments . ',' expression

    ')'  shift, and go to state 139
    ','  shift, and go to state 140


State 112

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression
   75 array_reference: IDENTIFIER '[' expression . ']'

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    ']'      shift, and go to state 141


State 113

   69 expression: '(' expression ')' .

    $default  reduce using rule 69 (expression)


State 114

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   60           | expression AND expression .
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 60 (expression)


State 115

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   61           | expression OR expression .
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    AND      shift, and go to state 73
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 61 (expression)


State 116

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   62           | expression NOT expression .
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 62 (expression)


State 117

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression
   68           | expression NOT_EQU expression .

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 68 (expression)


State 118

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   64           | expression LE expression .
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 64 (expression)


State 119

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   66           | expression GE expression .
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 66 (expression)


State 120

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   58           | expression MOD expression .
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    $default  reduce using rule 58 (expression)


State 121

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   63           | expression '<' expression .
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 63 (expression)


State 122

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   65           | expression '=' expression .
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 65 (expression)


State 123

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   67           | expression '>' expression .
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 67 (expression)


State 124

   54 expression: expression . '+' expression
   54           | expression '+' expression .
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 54 (expression)


State 125

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   55           | expression '-' expression .
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    MOD  shift, and go to state 79
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 55 (expression)


State 126

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   56           | expression '*' expression .
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    $default  reduce using rule 56 (expression)


State 127

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   57           | expression '/' expression .
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression

    $default  reduce using rule 57 (expression)


State 128

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER . '.' '.' NUMBER OF type

    '.'  shift, and go to state 142


State 129

   16 constants: CONST IDENTIFIER constant_type ASSIGN constant_exp .

    $default  reduce using rule 16 (constants)


State 130

   42 parameter: IDENTIFIER type .

    $default  reduce using rule 42 (parameter)


State 131

   38 parameters_block: '(' parameters ')' .

    $default  reduce using rule 38 (parameters_block)


State 132

   40 parameters: parameters ',' . parameter

    IDENTIFIER  shift, and go to state 94

    parameter  go to state 143


State 133

   32 function: FUNCTION IDENTIFIER parameters_block type function_bodys . END IDENTIFIER
   34 function_bodys: function_bodys . function_body

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 144
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 134

   33 procedure: PROCEDURE IDENTIFIER parameters_block function_bodys END . IDENTIFIER

    IDENTIFIER  shift, and go to state 145


State 135

   28 variable: VAR IDENTIFIER type ASSIGN constant_exp .

    $default  reduce using rule 28 (variable)


State 136

   81 loop: FOR decreasing IDENTIFIER ':' . num '.' '.' num function_bodys END FOR

    IDENTIFIER  shift, and go to state 146
    NUMBER      shift, and go to state 147

    num  go to state 148


State 137

   34 function_bodys: function_bodys . function_body
   78 condition: IF expression THEN function_bodys . ELSE function_bodys END IF
   79          | IF expression THEN function_bodys . END IF

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    ELSE              shift, and go to state 149
    END               shift, and go to state 150
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 138

   80 loop: LOOP function_bodys END LOOP .

    $default  reduce using rule 80 (loop)


State 139

   74 function_procedure: IDENTIFIER '(' arguments ')' .

    $default  reduce using rule 74 (function_procedure)


State 140

   76 arguments: arguments ',' . expression

    FALSE             shift, and go to state 24
    TRUE              shift, and go to state 33
    IDENTIFIER        shift, and go to state 63
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    constant_exp        go to state 40
    expression          go to state 151
    function_procedure  go to state 44
    array_reference     go to state 45


State 141

   75 array_reference: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 75 (array_reference)


State 142

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER '.' . '.' NUMBER OF type

    '.'  shift, and go to state 152


State 143

   40 parameters: parameters ',' parameter .

    $default  reduce using rule 40 (parameters)


State 144

   32 function: FUNCTION IDENTIFIER parameters_block type function_bodys END . IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 145

   33 procedure: PROCEDURE IDENTIFIER parameters_block function_bodys END IDENTIFIER .

    $default  reduce using rule 33 (procedure)


State 146

   83 num: IDENTIFIER .

    $default  reduce using rule 83 (num)


State 147

   82 num: NUMBER .

    $default  reduce using rule 82 (num)


State 148

   81 loop: FOR decreasing IDENTIFIER ':' num . '.' '.' num function_bodys END FOR

    '.'  shift, and go to state 154


State 149

   78 condition: IF expression THEN function_bodys ELSE . function_bodys END IF

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 155


State 150

   79 condition: IF expression THEN function_bodys END . IF

    IF  shift, and go to state 156


State 151

   54 expression: expression . '+' expression
   55           | expression . '-' expression
   56           | expression . '*' expression
   57           | expression . '/' expression
   58           | expression . MOD expression
   60           | expression . AND expression
   61           | expression . OR expression
   62           | expression . NOT expression
   63           | expression . '<' expression
   64           | expression . LE expression
   65           | expression . '=' expression
   66           | expression . GE expression
   67           | expression . '>' expression
   68           | expression . NOT_EQU expression
   76 arguments: arguments ',' expression .

    AND      shift, and go to state 73
    OR       shift, and go to state 74
    NOT      shift, and go to state 75
    NOT_EQU  shift, and go to state 76
    LE       shift, and go to state 77
    GE       shift, and go to state 78
    MOD      shift, and go to state 79
    '<'      shift, and go to state 80
    '='      shift, and go to state 81
    '>'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86

    $default  reduce using rule 76 (arguments)


State 152

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER '.' '.' . NUMBER OF type

    NUMBER  shift, and go to state 157


State 153

   32 function: FUNCTION IDENTIFIER parameters_block type function_bodys END IDENTIFIER .

    $default  reduce using rule 32 (function)


State 154

   81 loop: FOR decreasing IDENTIFIER ':' num '.' . '.' num function_bodys END FOR

    '.'  shift, and go to state 158


State 155

   34 function_bodys: function_bodys . function_body
   78 condition: IF expression THEN function_bodys ELSE function_bodys . END IF

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 159
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 156

   79 condition: IF expression THEN function_bodys END IF .

    $default  reduce using rule 79 (condition)


State 157

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER '.' '.' NUMBER . OF type

    OF  shift, and go to state 160


State 158

   81 loop: FOR decreasing IDENTIFIER ':' num '.' '.' . num function_bodys END FOR

    IDENTIFIER  shift, and go to state 146
    NUMBER      shift, and go to state 147

    num  go to state 161


State 159

   78 condition: IF expression THEN function_bodys ELSE function_bodys END . IF

    IF  shift, and go to state 162


State 160

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER '.' '.' NUMBER OF . type

    ':'  shift, and go to state 49

    type  go to state 163


State 161

   81 loop: FOR decreasing IDENTIFIER ':' num '.' '.' num . function_bodys END FOR

    $default  reduce using rule 35 (function_bodys)

    function_bodys  go to state 164


State 162

   78 condition: IF expression THEN function_bodys ELSE function_bodys END IF .

    $default  reduce using rule 78 (condition)


State 163

   31 array: ARRAY IDENTIFIER ':' ARRAY NUMBER '.' '.' NUMBER OF type .

    $default  reduce using rule 31 (array)


State 164

   34 function_bodys: function_bodys . function_body
   81 loop: FOR decreasing IDENTIFIER ':' num '.' '.' num function_bodys . END FOR

    ARRAY             shift, and go to state 4
    BEGIN_            shift, and go to state 22
    CONST             shift, and go to state 5
    END               shift, and go to state 165
    EXIT              shift, and go to state 23
    FALSE             shift, and go to state 24
    FOR               shift, and go to state 25
    GET               shift, and go to state 26
    IF                shift, and go to state 27
    LOOP              shift, and go to state 28
    PUT               shift, and go to state 29
    RESULT            shift, and go to state 30
    RETURN            shift, and go to state 31
    SKIP              shift, and go to state 32
    TRUE              shift, and go to state 33
    VAR               shift, and go to state 8
    IDENTIFIER        shift, and go to state 34
    NUMBER            shift, and go to state 35
    STRING_CONSTANTS  shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38

    statement           go to state 102
    declaration         go to state 103
    constants           go to state 12
    constant_exp        go to state 40
    variable            go to state 13
    array               go to state 14
    function_body       go to state 104
    block               go to state 41
    simple              go to state 42
    expression          go to state 43
    function_procedure  go to state 44
    array_reference     go to state 45
    condition           go to state 46
    loop                go to state 47


State 165

   81 loop: FOR decreasing IDENTIFIER ':' num '.' '.' num function_bodys END . FOR

    FOR  shift, and go to state 166


State 166

   81 loop: FOR decreasing IDENTIFIER ':' num '.' '.' num function_bodys END FOR .

    $default  reduce using rule 81 (loop)
